{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItems.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","components/NewExpenses/ExpenseForm.js","components/NewExpenses/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpenseFilter","value","selected","onChange","event","onChangeFilter","target","ExpensesList","items","length","map","expense","id","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","max","NewExpense","enteredExpenseData","Math","random","onAddExpenseData","dummyExpenses","App","expenses","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7f4dbdf.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import ExpenseDate from \"../Expenses/ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItems.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">â‚¹{props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import \"./ExpenseFilter.css\";\r\n\r\nconst ExpenseFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseFilter;\r\n","import ExpenseItem from \"./ExpenseItems\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No expenses found</h2>;\r\n  }\r\n  return (\r\n    <div className=\"expense-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import ExpenseItem from \"../Expenses/ExpenseItems\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  // console.log(props.items);\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpenseFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesList items={filteredExpenses} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  //   const [userInput, setUserInput] = useState({               //single state\r\n  //     enteredTitle: \"\",\r\n  //     enteredAmount: \"\",\r\n  //     enteredDate: \"\",\r\n  //   });\r\n\r\n  const changeTitleHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput({ ...userInput, enteredTitle: event.target.value });        //wrong way to update state while using single state\r\n    // setUserInput((prevState) => {\r\n    //   return { ...userInput, enteredTitle: event.target.value };            //correct way to update state while using single state\r\n    // });\r\n  };\r\n\r\n  const changeAmountHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput({ ...userInput, enteredAmount: event.target.value });       //wrong way to update state while using single state\r\n    // setUserInput((prevState) => {\r\n    //   return { ...userInput, enteredAmount: event.target.value };           //correct way to update state while using single state\r\n    // });\r\n  };\r\n\r\n  const changeDateHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    // setUserInput({ ...userInput, enteredDate: event.target.value });     //wrong way to update state while using single state\r\n    // setUserInput((prevState) => {\r\n    //   return { ...userInput, enteredDate: event.target.value };         //correct way to update state while using single state\r\n    // });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    // console.log(expenseData);\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__controls\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={changeTitleHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__controls\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={changeAmountHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__controls\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={changeDateHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default ExpenseForm;\r\n","import ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    // console.log(expenseData);\r\n    props.onAddExpenseData(expenseData);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n    </div>\r\n  );\r\n};\r\nexport default NewExpense;\r\n","import Expenses from \"./components/Expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpenses/NewExpense\";\r\nimport { useState } from \"react\";\r\n\r\nconst dummyExpenses = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Toilet Paper\",\r\n    amount: 100,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  { id: \"e2\", title: \"New TV\", amount: 28799, date: new Date(2021, 2, 12) },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 12394.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 750,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  const [expenses, setExpenses] = useState(dummyExpenses);\r\n\r\n  const addExpenseDataHandler = (expense) => {\r\n    // console.log(expense);\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpenseData={addExpenseDataHandler} />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}